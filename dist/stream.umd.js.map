{"version":3,"file":"stream.umd.js","sources":["../stream.js"],"sourcesContent":["const EventEmitter = require(\"events\");\r\nconst END = \"\\r\\n\";\r\nconst END_LENGTH = 2;\r\n\r\nclass Stream extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.buffer = \"\";\r\n  }\r\n\r\n  parse(buffer) {\r\n    this.buffer += buffer.toString(\"utf8\");\r\n    let index;\r\n    let json;\r\n\r\n    while ((index = this.buffer.indexOf(END)) > -1) {\r\n      json = this.buffer.slice(0, index);\r\n      this.buffer = this.buffer.slice(index + END_LENGTH);\r\n      if (json.length > 0) {\r\n        try {\r\n          json = JSON.parse(json);\r\n          this.emit(json.event || \"data\", json);\r\n        } catch (error) {\r\n          error.source = json;\r\n          this.emit(\"error\", error);\r\n        }\r\n      } else {\r\n        this.emit(\"ping\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Stream;\r\n"],"names":["const","Stream","super","this","buffer","parse","index","json","toString","indexOf","slice","length","JSON","emit","event","error","source","require","module","exports"],"mappings":"0IAAAA,IAIMC,cACJ,aACEC,aACAC,KAAKC,OAAS,mGAGhBC,eAAMD,OAEAE,EACAC,EAEJ,IAJAJ,KAAKC,QAAUA,EAAOI,SAAS,SAIvBF,EAAQH,KAAKC,OAAOK,QAdpB,UAcqC,GAG3C,GAFAF,OAAYH,OAAOM,MAAM,EAAGJ,QACvBF,YAAcA,OAAOM,MAAMJ,EAfnB,GAgBTC,EAAKI,OAAS,EAChB,IACEJ,EAAOK,KAAKP,MAAME,QACbM,KAAKN,EAAKO,OAAS,OAAQP,SACzBQ,GACPA,EAAMC,OAAST,OACVM,KAAK,QAASE,aAGhBF,KAAK,YA3BGI,QAAQ,WAiC7BC,OAAOC,QAAUlB"}